	$a_0_length = 3;
	# Comprobacion de rango
	if (0 < 0) goto L0;
	if (3 < 0) goto L0;
	if (3 == 0) goto L0;
	goto L1;
L0:
	error;
	halt;
L1:
	t0 = 2 * 0;
	t0 = t0 + 0;
	# Comprobacion de rango
	if (0 < 0) goto L2;
	if (2 < 0) goto L2;
	if (2 == 0) goto L2;
	goto L3;
L2:
	error;
	halt;
L3:
	t1 = a_0[t0];
	a_0[t2] = 0;
	# Comprobacion de rango
	if (0 < 0) goto L4;
	if (3 < 0) goto L4;
	if (3 == 0) goto L4;
	goto L5;
L4:
	error;
	halt;
L5:
	t3 = 2 * 0;
	t3 = t3 + 1;
	# Comprobacion de rango
	if (1 < 0) goto L6;
	if (2 < 1) goto L6;
	if (2 == 1) goto L6;
	goto L7;
L6:
	error;
	halt;
L7:
	t4 = a_0[t3];
	a_0[t5] = 1;
	# Comprobacion de rango
	if (1 < 0) goto L8;
	if (3 < 1) goto L8;
	if (3 == 1) goto L8;
	goto L9;
L8:
	error;
	halt;
L9:
	t6 = 2 * 1;
	t6 = t6 + 0;
	# Comprobacion de rango
	if (0 < 0) goto L10;
	if (2 < 0) goto L10;
	if (2 == 0) goto L10;
	goto L11;
L10:
	error;
	halt;
L11:
	t7 = a_0[t6];
	a_0[t8] = 10;
	# Comprobacion de rango
	if (1 < 0) goto L12;
	if (3 < 1) goto L12;
	if (3 == 1) goto L12;
	goto L13;
L12:
	error;
	halt;
L13:
	t9 = 2 * 1;
	t9 = t9 + 1;
	# Comprobacion de rango
	if (1 < 0) goto L14;
	if (2 < 1) goto L14;
	if (2 == 1) goto L14;
	goto L15;
L14:
	error;
	halt;
L15:
	t10 = a_0[t9];
	a_0[t11] = 11;
	# Comprobacion de rango
	if (2 < 0) goto L16;
	if (3 < 2) goto L16;
	if (3 == 2) goto L16;
	goto L17;
L16:
	error;
	halt;
L17:
	t12 = 2 * 2;
	t12 = t12 + 0;
	# Comprobacion de rango
	if (0 < 0) goto L18;
	if (2 < 0) goto L18;
	if (2 == 0) goto L18;
	goto L19;
L18:
	error;
	halt;
L19:
	t13 = a_0[t12];
	a_0[t14] = 20;
	# Comprobacion de rango
	if (2 < 0) goto L20;
	if (3 < 2) goto L20;
	if (3 == 2) goto L20;
	goto L21;
L20:
	error;
	halt;
L21:
	t15 = 2 * 2;
	t15 = t15 + 1;
	# Comprobacion de rango
	if (1 < 0) goto L22;
	if (2 < 1) goto L22;
	if (2 == 1) goto L22;
	goto L23;
L22:
	error;
	halt;
L23:
	t16 = a_0[t15];
	a_0[t17] = 21;
	# Comprobacion de rango
	if (2 < 0) goto L24;
	if (3 < 2) goto L24;
	if (3 == 2) goto L24;
	goto L25;
L24:
	error;
	halt;
L25:
	t18 = 2 * 2;
	t18 = t18 + 1;
	# Comprobacion de rango
	if (1 < 0) goto L26;
	if (2 < 1) goto L26;
	if (2 == 1) goto L26;
	goto L27;
L26:
	error;
	halt;
L27:
	t19 = a_0[t18];
	# Comprobacion de rango
	if (1 < 0) goto L28;
	if (3 < 1) goto L28;
	if (3 == 1) goto L28;
	goto L29;
L28:
	error;
	halt;
L29:
	t20 = 2 * 1;
	t20 = t20 + 1;
	# Comprobacion de rango
	if (1 < 0) goto L30;
	if (2 < 1) goto L30;
	if (2 == 1) goto L30;
	goto L31;
L30:
	error;
	halt;
L31:
	t21 = a_0[t20];
	t22 = t19 * t21;
	print t22;
