	$m_0_length = 3;
	$st_0_length = 3;
	i_0 = 0;
L0:
	if (i_0 < $m_0_length) goto L2;
	goto L3;
L1:
	$t0 = i_0;
	i_0 = i_0 + 1;
	goto L0;
L2:
	$t1 = i_0 + 65;
	# Comprobacion de rango
	if (i_0 < 0) goto L4;
	if (3 < i_0) goto L4;
	if (3 == i_0) goto L4;
	goto L5;
L4:
	error;
	halt;
L5:
	m_0[i_0] = $t1;
	# Comprobacion de rango
	if (i_0 < 0) goto L6;
	if (3 < i_0) goto L6;
	if (3 == i_0) goto L6;
	goto L7;
L6:
	error;
	halt;
L7:
	$t2 = m_0[i_0];
	# Comprobacion de rango
	if (i_0 < 0) goto L8;
	if (3 < i_0) goto L8;
	if (3 == i_0) goto L8;
	goto L9;
L8:
	error;
	halt;
L9:
	st_0[i_0] = $t2;
	goto L1;
L3:
	$t3 = $m_0_length - 1;
	i_0 = $t3;
L10:
	if (0 < i_0) goto L12;
	goto L13;
L11:
	$t4 = i_0;
	i_0 = i_0 - 1;
	goto L10;
L12:
	$t6 = 0;
L14:
	 if(2 < $t6) goto L15;
	x_0 = m_0[$t6];
	$t6 = $t6 + 1;
	$t7 = i_0 - 1;
	# Comprobacion de rango
	if ($t7 < 0) goto L16;
	if (3 < $t7) goto L16;
	if (3 == $t7) goto L16;
	goto L17;
L16:
	error;
	halt;
L17:
	$t8 = m_0[$t7];
	$t9 = x_0 + $t8;
	# Comprobacion de rango
	if (i_0 < 0) goto L18;
	if (3 < i_0) goto L18;
	if (3 == i_0) goto L18;
	goto L19;
L18:
	error;
	halt;
L19:
	m_0[i_0] = $t9;
	print x_0;
	goto L14;
L15:
	goto L11;
L13:
